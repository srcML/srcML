<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.8.0" language="C++" filename="/home/brian/Projects/buildFiles/srcMLBuild/bindings/srcml.h.temp"><comment type="block" format="doxygen">/**
 * @file srcml.h
 *
 * @copyright Copyright (C) 2013-2014 srcML, LLC. (www.srcML.org)
 *
 * The srcML Toolkit is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * The srcML Toolkit is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the srcML Toolkit; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */</comment>

<comment type="block" format="doxygen">/**
 * @mainpage srcML Project
 *
 * @section libsrcml
 * 
 * The srcml functions available in libsrcml for the purposes of:
 *
 * * Converting source code to the srcML format
 * * Converting the srcML format back to source code
 * * Querying and transformation in the srcML format
 * 
 * The general categories:
 * 
 * * The srcML convenience function srcml() for conversion of
 *   individual source files to srcML, and back. Includes helper
 *   functions to set options in the form srcml_set_*() and srcml_get_*()
 * 
 * * Query functions of the form srcml_check_*() to see the
 *   capabilities of the library. E.g., what languages are supported
 * 
 * * API for full control over the construction of srcML archives
 *   from multiple input source-code files, srcml_archive_*() and srcml_unit_*()
 */</comment>

<cpp:ifndef>#<cpp:directive>ifndef</cpp:directive> <name>INCLUDED_SRCML_H</name></cpp:ifndef>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>INCLUDED_SRCML_H</name></cpp:macro></cpp:define>

<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stddef.h&gt;</cpp:file></cpp:include> <comment type="block">/* size_t */</comment>
<cpp:include>#<cpp:directive>include</cpp:directive> <cpp:file>&lt;stdio.h&gt;</cpp:file></cpp:include> <comment type="block">/* FILE * */</comment>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
<extern>extern <literal type="string">"C"</literal> <block>{
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen">/** Function export macro */</comment>
<cpp:if>#<cpp:directive>if</cpp:directive> <expr><call><name>defined</name><argument_list>(<argument><expr><name>WIN32</name></expr></argument>)</argument_list></call> <operator>&amp;&amp;</operator> <operator>!</operator><call><name>defined</name><argument_list>(<argument><expr><name>__MINGW32__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__LIBSRCML_DECL</name></cpp:macro> <cpp:value>__declspec(dllexport)</cpp:value></cpp:define>
<cpp:else>#<cpp:directive>else</cpp:directive></cpp:else>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>__LIBSRCML_DECL</name></cpp:macro></cpp:define>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<comment type="block">/* Header file version macros */</comment>
<comment type="block" format="doxygen">/** number representing libsrcml version */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_VERSION_NUMBER</name></cpp:macro> <cpp:value>8000</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string containing libsrcml version */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_VERSION_STRING</name></cpp:macro> <cpp:value>"0.8.0"</cpp:value></cpp:define>

<comment type="block">/* Cleanup the globally allocated items */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>void</name></type> <name>srcml_cleanup_globals</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block">/* Library version functions */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_version_number</name><parameter_list>()</parameter_list>;</function_decl>

<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_version_string</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block">/* Core language set */</comment>
<comment type="block" format="doxygen">/** srcML language not set */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_NONE</name></cpp:macro>   <cpp:value>0</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string for language C */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_C</name></cpp:macro>      <cpp:value>"C"</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string for language C++ */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_CXX</name></cpp:macro>    <cpp:value>"C++"</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string for language Java */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_JAVA</name></cpp:macro>   <cpp:value>"Java"</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string for language C# */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_CSHARP</name></cpp:macro> <cpp:value>"C#"</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string for language C# */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_OBJECTIVE_C</name></cpp:macro> <cpp:value>"Objective-C"</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** string for language XML */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_LANGUAGE_XML</name></cpp:macro>    <cpp:value>"xml"</cpp:value></cpp:define>

<comment type="block">/* Options */</comment>
<comment type="block" format="doxygen">/** Create an archive */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_ARCHIVE</name></cpp:macro>           <cpp:value>1&lt;&lt;0</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Include line/column position attributes */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_POSITION</name></cpp:macro>          <cpp:value>1&lt;&lt;1</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markup preprocessor elements (default for C, C++, C#) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_CPP_NOMACRO</name></cpp:macro>       <cpp:value>1&lt;&lt;2</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markup preprocessor elements (default for C, C++) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_CPP</name></cpp:macro>               <cpp:value>1&lt;&lt;2 | 1&lt;&lt;3</cpp:value></cpp:define> 
<comment type="block" format="doxygen">/** Issue an XML declaration */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_XML_DECL</name></cpp:macro>          <cpp:value>1&lt;&lt;4</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Include any XML namespace declarations */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_NAMESPACE_DECL</name></cpp:macro>    <cpp:value>1&lt;&lt;5</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Leave as text preprocessor else parts (default: markup) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_CPP_TEXT_ELSE</name></cpp:macro>     <cpp:value>1&lt;&lt;6</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markup preprocessor @code #if 0 @endcode sections (default: leave as text) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_CPP_MARKUP_IF0</name></cpp:macro>    <cpp:value>1&lt;&lt;7</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Apply transformations to the entire srcML file (default: each unit */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_APPLY_ROOT</name></cpp:macro>        <cpp:value>1&lt;&lt;8</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Compress the output file */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_COMPRESS</name></cpp:macro>          <cpp:value>1&lt;&lt;9</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Nest if in else if intead of elseif tag */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_NESTIF</name></cpp:macro>            <cpp:value>1&lt;&lt;10</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Output hash attribute on each unit (default: on) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_HASH</name></cpp:macro>              <cpp:value>1&lt;&lt;11</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Wrap function/classes/etc with templates (default: on) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_WRAP_TEMPLATE</name></cpp:macro>     <cpp:value>1&lt;&lt;12</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** output is interactive (good for editing applications) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_INTERACTIVE</name></cpp:macro>       <cpp:value>1&lt;&lt;13</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Not sure what this used for */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_XPATH_TOTAL</name></cpp:macro>       <cpp:value>1&lt;&lt;14</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** expression mode */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_EXPRESSION</name></cpp:macro>        <cpp:value>1&lt;&lt;15</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Extra processing of @code#line@endcode for position information */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_LINE</name></cpp:macro>              <cpp:value>1&lt;&lt;16</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** additional cpp:if/cpp:endif checking */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_CPPIF_CHECK</name></cpp:macro>       <cpp:value>1&lt;&lt;17</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** debug time attribute */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_DEBUG_TIMER</name></cpp:macro>       <cpp:value>1&lt;&lt;18</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** turn on optional ternary operator markup */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_TERNARY</name></cpp:macro>           <cpp:value>1&lt;&lt;19</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** turn on optional ternary operator markup */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_PSEUDO_BLOCK</name></cpp:macro>      <cpp:value>1&lt;&lt;20</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Turn on old optional markup behaviour */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_OPTIONAL_MARKUP</name></cpp:macro>   <cpp:value>1&lt;&lt;21</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markups literal in special namespace */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_LITERAL</name></cpp:macro>           <cpp:value>1&lt;&lt;22</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markups modifiers in special namespace */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_MODIFIER</name></cpp:macro>          <cpp:value>1&lt;&lt;23</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markups operator in special namespace */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_OPERATOR</name></cpp:macro>          <cpp:value>1&lt;&lt;24</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Markups operator in special namespace */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_OPTION_DEBUG</name></cpp:macro>             <cpp:value>1&lt;&lt;25</cpp:value></cpp:define>

<comment type="block">/* srcml status messages */</comment>
<comment type="block" format="doxygen">/** Return status indicating no errors */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_OK</name></cpp:macro>                   <cpp:value>0</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating errors occurred */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_ERROR</name></cpp:macro>                <cpp:value>1</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating an invalid argument */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_INVALID_ARGUMENT</name></cpp:macro>     <cpp:value>2</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating that their is some problem with the input */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_INVALID_INPUT</name></cpp:macro>        <cpp:value>3</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating an invalid read I/O operation (such as write on read only archive) */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_INVALID_IO_OPERATION</name></cpp:macro> <cpp:value>4</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating that their is some problem with the input */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_IO_ERROR</name></cpp:macro>             <cpp:value>5</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating an unitialized unit */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_UNINITIALIZED_UNIT</name></cpp:macro>   <cpp:value>6</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status indicating an unset language */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_UNSET_LANGUAGE</name></cpp:macro>       <cpp:value>7</cpp:value></cpp:define>
<comment type="block" format="doxygen">/** Return status inidicating their are no transformations */</comment>
<cpp:define>#<cpp:directive>define</cpp:directive> <cpp:macro><name>SRCML_STATUS_NO_TRANSFORMATION</name></cpp:macro>    <cpp:value>8</cpp:value></cpp:define>

<comment type="block">/* libsrcml data structures */</comment>
 <expr_stmt><expr><name>srcml_archive</name></expr>;</expr_stmt>
 <expr_stmt><expr><name>srcml_unit</name></expr>;</expr_stmt>

<comment type="block">/*
  Convenience function for translating to and from the srcML format

  * Translates from source code to srcML if the input_filename
  extension is for source code, e.g., .c, .cpp, .java Language
  determined by file extension if language is not set with
  srcml_set_language()

  * Translates from srcML to source code if the input_filename
  extension is '.xml'.

  * Input filenames can be for a file, a compressed file, a
  source-code archive (e.g., .tar), or a URI that is for any of these.
  Additionally, the input filename can be for a directory.

  * Options can be specified with the global srcml_set_*(),
  srcml_clear_*(), and srcml_register_*()

  * Options can be queried with the global srcml_get_*() and
  srcml_check_*()
*/</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>input_filename</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>output_filename</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/*
  Global settings.  Can be used with convenience function srcml()
*/</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_src_encoding</name>          <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>encoding</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_encoding</name>              <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>encoding</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_language</name>              <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_filename</name>              <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_directory</name>             <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>directory</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_version</name>               <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>version</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_timestamp</name>             <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>timestamp</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_hash</name>                  <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>hash</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_options</name>               <parameter_list>(<param><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>option</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_enable_option</name>             <parameter_list>(<param><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>option</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_disable_option</name>            <parameter_list>(<param><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>option</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_tabstop</name>               <parameter_list>(<param><decl><type><name>int</name></type> <name>tabstop</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_register_file_extension</name>   <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>extension</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_register_namespace</name>        <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>ns</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_set_processing_instruction</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>target</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>data</name></decl></param>)</parameter_list>;</function_decl> 
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_register_macro</name>            <parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>token</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>type</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_src_encoding</name> <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_encoding</name> <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_revision</name> <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_language</name> <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_filename</name> <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_directory</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_version</name>  <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_timestamp</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_hash</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>srcml_get_options</name>  <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type>                <name>srcml_get_tabstop</name>  <parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_processing_instruction_target</name><parameter_list>()</parameter_list>;</function_decl> 
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_processing_instruction_data</name>  <parameter_list>()</parameter_list>;</function_decl> 

<comment type="block">/*
  XML namespaces
*/</comment>

<comment type="block">/* Number of declared XML namespaces */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type>                <name>srcml_get_namespace_size</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block">/* Prefix of the namespace at that position, where empty namespace is an empty string, and 0 is invalid position */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_namespace_prefix</name><parameter_list>(<param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Prefix of the namespace with this namespace uri */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_prefix_from_uri</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>namespace_uri</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* URI of the namespace at that position, where 0 is invalid position */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_namespace_uri</name><parameter_list>(<param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* URI of the namespace with this namespace prefix */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_uri_from_prefix</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>prefix</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type>                <name>srcml_get_macro_list_size</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_macro_token</name><parameter_list>(<param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_macro_token_type</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>namespace_uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_get_macro_type</name><parameter_list>(<param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Source-code language is supported */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_check_language</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Query supported source-code languages */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_get_language_list_size</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_get_language_list</name><parameter_list>(<param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Currently registered language for a file extension
   When full filename is given, the extension is extracted */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_check_extension</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>filename</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Particular encoding is supported, both for input and output */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_check_encoding</name><parameter_list>(<param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>encoding</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Whether various features are available in this installation */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_check_xslt</name><parameter_list>()</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_check_exslt</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block">/* Description of last error */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_error_string</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block">/*
  Full libsrcml API
*/</comment>

<comment type="block">/* Currently registered language for a file extension
   When full filename is given, the extension is extracted */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_archive_check_extension</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type> <name>archive</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>filename</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Create a new srcml archive
   Client is responsible for freeing memory using srcml_free_archive() */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name>  <name>srcml_archive</name><modifier>*</modifier></type> <name>srcml_create_archive</name><parameter_list>()</parameter_list>;</function_decl>

<comment type="block">/* Clone the setup of an existing archive
   Client is responsible for freeing memory using srcml_free_archive() */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name>  <name>srcml_archive</name><modifier>*</modifier></type> <name>srcml_clone_archive</name><parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Open a srcML archive for output */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_open_filename</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_open_memory</name>  <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>char</name><modifier>*</modifier><modifier>*</modifier></type> <name>buffer</name></decl></param>, <param><decl><type><name>int</name> <modifier>*</modifier></type> <name>size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_open_FILE</name>    <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>FILE</name><modifier>*</modifier></type> <name>srcml_file</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_open_fd</name>      <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>srcml_fd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_open_io</name>      <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>buffer</name></decl></param>, <param><decl><type><name>int</name></type> <name>len</name></decl></param>)</parameter_list></function_decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>close_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Setup options for srcml archive */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_encoding</name>           <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>encoding</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_src_encoding</name>       <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>encoding</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_language</name>           <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_filename</name>           <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_directory</name>          <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>directory</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_version</name>            <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>version</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_options</name>               <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>option</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_enable_option</name>             <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>option</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_disable_option</name>            <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>unsigned</name> <name>long</name> <name>long</name></type> <name>option</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_tabstop</name>               <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>tabstop</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_register_file_extension</name>   <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>extension</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_register_namespace</name>        <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>ns</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_set_processing_instruction</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>target</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>data</name></decl></param>)</parameter_list>;</function_decl> 
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_archive_register_macro</name>            <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>token</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>type</name></decl></param>)</parameter_list>;</function_decl>  

<comment type="block">/* Query of the options for srcml archive */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_encoding</name>                     <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_src_encoding</name>                 <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_revision</name>                     <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_language</name>                     <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_filename</name>                     <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_directory</name>                    <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_version</name>                      <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>unsigned</name> <name>long</name> <name>long</name></type> <name>srcml_archive_get_options</name>                      <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type>                <name>srcml_archive_get_tabstop</name>                      <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type>                <name>srcml_archive_get_namespace_size</name>               <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_namespace_prefix</name>             <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_prefix_from_uri</name>              <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>namespace_uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_namespace_uri</name>                <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_uri_from_prefix</name>              <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>prefix</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_processing_instruction_target</name><parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl> 
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_processing_instruction_data</name>  <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl> 
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type>                <name>srcml_archive_get_macro_list_size</name>              <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_macro_token</name>                  <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_macro_token_type</name>             <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>namespace_uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type>        <name>srcml_archive_get_macro_type</name>                   <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>pos</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Create a new srcml unit.
   Client is responsible for freeing memory using srcml_free_unit() */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name>  <name>srcml_unit</name><modifier>*</modifier></type> <name>srcml_create_unit</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type> <name>archive</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Setup options for srcml unit */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_encoding</name> <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_language</name> <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>language</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_filename</name> <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_directory</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>directory</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_version</name>  <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>version</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_timestamp</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>timestamp</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unit_set_hash</name>     <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>hash</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Convert to srcml.  Files/buffer can be compressed, but not a
   source archive format (e.g., not .tar) */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_parse_unit_filename</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type> <name>unit</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>src_filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_parse_unit_memory</name>  <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>src_buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>buffer_size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_parse_unit_FILE</name>    <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>FILE</name><modifier>*</modifier></type> <name>src_file</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_parse_unit_fd</name>      <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>src_fd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_parse_unit_io</name>      <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><decl><type><name>char</name> <modifier>*</modifier></type> <name>buffer</name></decl></param>, <param><decl><type><name>int</name></type> <name>len</name></decl></param>)</parameter_list></function_decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>close_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Append unit to an archive */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_unit</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Iteratively build a unit */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_start_unit</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_end_unit</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_start_element</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_end_element</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_namespace</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>uri</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_attribute</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>uri</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>content</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_write_string</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>content</name></decl></param>)</parameter_list>;</function_decl>
 
<comment type="block">/* Free allocated unit */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>void</name></type> <name>srcml_free_unit</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Close the srcML archive */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>void</name></type> <name>srcml_close_archive</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Free the srcML archive data */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>void</name></type> <name>srcml_free_archive</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Open a srcML archive for reading */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_read_open_filename</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_read_open_memory</name>  <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>buffer_size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_read_open_FILE</name>    <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>FILE</name><modifier>*</modifier></type> <name>srcml_file</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_read_open_fd</name>      <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>srcml_fd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_read_open_io</name>      <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>read_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><decl><type><name>char</name> <modifier>*</modifier></type> <name>buffer</name></decl></param>, <param><decl><type><name>int</name></type> <name>len</name></decl></param>)</parameter_list></function_decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>close_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Read the next unit from the archive
   Returns 0 if there are no more units */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name>  <name>srcml_unit</name><modifier>*</modifier></type> <name>srcml_read_unit_header</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name>  <name>srcml_unit</name><modifier>*</modifier></type> <name>srcml_archive_read_unit_xml</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name>  <name>srcml_unit</name><modifier>*</modifier></type> <name>srcml_archive_read_unit</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Query options of srcml unit */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_encoding</name> <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_revision</name> <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_language</name> <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_filename</name> <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_directory</name><parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_version</name>  <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_timestamp</name><parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_hash</name>     <parameter_list>(<param><decl><type><specifier>const</specifier>  <name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>srcml_unit_get_xml</name>      <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Convert from srcML to source code */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unparse_unit_filename</name><parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>src_filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unparse_unit_memory</name>  <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>char</name><modifier>*</modifier><modifier>*</modifier></type> <name>src_buffer</name></decl></param>, <param><decl><type><name>int</name> <modifier>*</modifier></type> <name>src_size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unparse_unit_FILE</name>    <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>FILE</name><modifier>*</modifier></type> <name>srcml_file</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unparse_unit_fd</name>      <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>srcml_fd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_unparse_unit_io</name>      <parameter_list>( <param><decl><type><name>srcml_unit</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>write_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name> <modifier>*</modifier></type> <name>buffer</name></decl></param>, <param><decl><type><name>int</name></type> <name>len</name></decl></param>)</parameter_list></function_decl></param>, <param><function_decl><type><name>int</name></type> (<modifier>*</modifier><name>close_callback</name>)<parameter_list>(<param><decl><type><name>void</name> <modifier>*</modifier></type> <name>context</name></decl></param>)</parameter_list></function_decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* srcML XPath query and XSLT transform functions */</comment>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_clear_transforms</name>                 <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xpath</name>           <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>xpath_string</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xpath_attribute</name> <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>xpath_string</name></decl></param>,
                                                            <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>namespace_uri</name></decl></param>,
                                                            <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>attr_name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>attr_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xpath_element</name>   <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>xpath_string</name></decl></param>,
                                                            <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>namespace_uri</name></decl></param>,
                                                            <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>element</name></decl></param>,
                                                            <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>attr_prefix</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>attr_namespace_uri</name></decl></param>,
                                                            <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>attr_name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>attr_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xslt_filename</name>   <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>xslt_filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xslt_memory</name>     <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>xslt_buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xslt_FILE</name>       <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>FILE</name><modifier>*</modifier></type> <name>xslt_file</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_xslt_fd</name>         <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>xslt_fd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_relaxng_filename</name><parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>relaxng_filename</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_relaxng_memory</name>  <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>relaxng_buffer</name></decl></param>, <param><decl><type><name>size_t</name></type> <name>size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_relaxng_FILE</name>    <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>FILE</name><modifier>*</modifier></type> <name>relaxng_file</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_relaxng_fd</name>      <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><name>int</name></type> <name>relaxng_fd</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_param</name>           <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>param_name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>param_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_append_transform_stringparam</name>     <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>param_name</name></decl></param>, <param><decl><type><specifier>const</specifier> <name>char</name><modifier>*</modifier></type> <name>param_value</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name>__LIBSRCML_DECL</name> <name>int</name></type> <name>srcml_apply_transforms</name>                 <parameter_list>( <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type> <name>iarchive</name></decl></param>,  <param><decl><type><name>srcml_archive</name><modifier>*</modifier></type> <name>oarchive</name></decl></param>)</parameter_list>;</function_decl>

<comment type="block">/* Augment read to use user defined xml handlers */</comment>
<comment type="block">/*
__LIBSRCML_DECL int srcml_set_xml_handler_start_unit( srcml_archive*);
__LIBSRCML_DECL int srcml_set_xml_handler_start_element( srcml_archive*);
__LIBSRCML_DECL int srcml_set_xml_handler_characters( srcml_archive*);
__LIBSRCML_DECL int srcml_set_xml_handler_cdata( srcml_archive*);
__LIBSRCML_DECL int srcml_set_xml_handler_comment( srcml_archive*);
__LIBSRCML_DECL int srcml_set_xml_handler_end_element( srcml_archive*);
__LIBSRCML_DECL int srcml_set_xml_handler_end_unit( srcml_archive*);

__LIBSRCML_DECL int srcml_xml_handler_parse_archive( srcml_archive*);
__LIBSRCML_DECL int srcml_xml_handler_release( srcml_archive*);
__LIBSRCML_DECL int srcml_xml_handler_stop( srcml_archive*);
*/</comment>

<cpp:ifdef>#<cpp:directive>ifdef</cpp:directive> <name>__cplusplus</name></cpp:ifdef>
}</block></extern>
<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>

<cpp:endif>#<cpp:directive>endif</cpp:directive></cpp:endif>
</unit>
