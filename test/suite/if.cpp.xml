<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" language="C++" url="if" options="NESTIF">

<unit>
<if>if <condition>(<expr><name>a</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>b</name></expr>;</expr_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name></expr>)</condition><then> <block type="pseudo"><empty_stmt>;</empty_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><literal type="number">2</literal></expr>;</expr_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><empty_stmt>;</empty_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name> <operator>==</operator> <name>b</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>c</name></expr>;</expr_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name> <operator>==</operator> <name>b</name></expr>)</condition><then> <block type="pseudo"><empty_stmt>;</empty_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name></expr>)</condition><then> <block>{ <expr_stmt><expr><name>b</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> }</block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> <block>{ <expr_stmt><expr><name>b</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> }</block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name> <operator>==</operator> <name>d</name></expr>)</condition><then> <block>{ <expr_stmt><expr><name>b</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> }</block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name></expr>)</condition><then> <block type="pseudo"><empty_stmt>;</empty_stmt></block></then>
<else>else <block type="pseudo"><empty_stmt>;</empty_stmt></block></else></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name></expr>)</condition><then> <block type="pseudo"><empty_stmt>;</empty_stmt></block></then>
<else>else <block>{}</block></else></if>
</unit>

<unit>
<if>if <condition>(<expr><name>a</name></expr>)</condition><then> <block>{}</block></then>
<else>else <block type="pseudo"><empty_stmt>;</empty_stmt></block></else></if>
</unit>

<unit>
<if>if <condition>(<expr><name>c</name></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>a</name></expr><operator>,</operator> <expr><name>b</name></expr>;</expr_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><call><name>a</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>t</name></expr>)</condition><then>
     <block type="pseudo"><empty_stmt>;</empty_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><operator>(</operator><call><name>a</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call><operator>)</operator></expr></condition><then> <block>{
}</block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name><name>upper</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <call><name>qMin</name><argument_list>(<argument><expr><name><name>l</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>u</name><operator>.</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>)</condition><then> <block type="pseudo"><return>return <expr><literal type="number">0</literal></expr>;</return></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> 
  <block type="pseudo"><while>while <condition>(<expr><literal type="number">2</literal></expr>)</condition>
    <block type="pseudo"><empty_stmt>;</empty_stmt></block></while></block></then></if>
</unit>

<unit>
  <if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> 
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><then>
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></then>
    <else>else
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block></else></if></block></then>
  <else>else
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">3</literal></expr>)</condition><then> 
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></then>
    <else>else
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block></else></if></block></else></if>
</unit>

<unit>
  <if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> 
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><then>
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block></then>
  <else>else
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">3</literal></expr>)</condition><then> 
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block></then>
    <else>else
      <block type="pseudo"><expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block></else></if></block></else></if></block></then></if>
</unit>

<unit>
  <if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> 
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><then>
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">3</literal></expr>)</condition><then>
	<block type="pseudo"><break>break;</break></block></then>
      <else>else
	<block type="pseudo"><break>break;</break></block></else></if></block></then>
    <else>else
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">4</literal></expr>)</condition><then>
	<block type="pseudo"><break>break;</break></block></then>
      <else>else
	<block type="pseudo"><break>break;</break></block></else></if></block></else></if></block></then>
  <else>else
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">5</literal></expr>)</condition><then> 
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">6</literal></expr>)</condition><then>
	<block type="pseudo"><break>break;</break></block></then>
      <else>else
	<block type="pseudo"><break>break;</break></block></else></if></block></then>
    <else>else
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">7</literal></expr>)</condition><then>
	<block type="pseudo"><break>break;</break></block></then>
      <else>else
	<block type="pseudo"><break>break;</break></block></else></if></block></else></if></block></else></if>
</unit>

<unit>
  <if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><then> 
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><then>
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">3</literal></expr>)</condition><then>
	<block type="pseudo"><continue>continue;</continue></block></then>
      <else>else
	<block type="pseudo"><continue>continue;</continue></block></else></if></block></then>
    <else>else
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">4</literal></expr>)</condition><then>
	<block type="pseudo"><continue>continue;</continue></block></then>
      <else>else
	<block type="pseudo"><continue>continue;</continue></block></else></if></block></else></if></block></then>
  <else>else
    <block type="pseudo"><if>if <condition>(<expr><literal type="number">5</literal></expr>)</condition><then> 
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">6</literal></expr>)</condition><then>
	<block type="pseudo"><continue>continue;</continue></block></then>
      <else>else
	<block type="pseudo"><continue>continue;</continue></block></else></if></block></then>
    <else>else
      <block type="pseudo"><if>if <condition>(<expr><literal type="number">7</literal></expr>)</condition><then>
	<block type="pseudo"><continue>continue;</continue></block></then>
      <else>else
	<block type="pseudo"><continue>continue;</continue></block></else></if></block></else></if></block></else></if>
</unit>

<unit>
<if>if<condition>(<decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>)</condition><then><block type="pseudo"><empty_stmt>;</empty_stmt></block></then></if>
</unit>

<unit>
<if>if<condition>(<decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>a</name></expr>;</expr_stmt></block></then></if>
</unit>

<unit>
<if>if<condition>(<decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>)</condition><then> <block>{}</block></then></if>
</unit>

<unit>
<if>if<condition>(<expr><name>a</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><then> <block type="pseudo"><expr_stmt><expr><name>b</name></expr>;</expr_stmt></block></then></if>
</unit>

<unit>
<if>if <condition>(<expr><name>emit</name></expr>)</condition><then> <block>{}</block></then></if>
</unit>

</unit>
