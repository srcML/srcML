<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="Java" url="enum">

<unit>
<enum_decl>enum <name>foo</name>;</enum_decl>
</unit>

<unit>
<enum_decl>enum <name>foo</name>, <name>bar</name>;</enum_decl>
</unit>

<unit>
<enum>enum <block>{ <decl><name>a</name></decl> }</block></enum>
</unit>

<unit>
<enum>enum <name>a</name> <block>{ <decl><name>b</name></decl> }</block></enum>
</unit>

<unit>
<enum>enum <block>{ <decl><name>a</name></decl>, <decl><name>b</name></decl> }</block></enum>
</unit>

<unit>
<enum>enum <name>a</name> <block>{ <decl><name>b</name></decl>, <decl><name>c</name></decl> }</block></enum>
</unit>

<unit>
<enum>enum <block>{ <decl><name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> }</block></enum>
</unit>

<unit>
<enum>enum <name>a</name> <block>{ <decl><name>b</name> <init>= <expr><literal type="number">0</literal></expr></init></decl> }</block></enum>
</unit>

<unit>
<enum>enum <block>{ <decl><name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><name>b</name></decl> }</block></enum>
</unit>

<unit>
<enum>enum <name>a</name> <block>{ <decl><name>b</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>, <decl><name>c</name></decl> }</block></enum>
</unit>

<unit>
<enum><specifier>public</specifier> enum <name>Planet</name> <block>{

    <decl><name>MERCURY</name> <argument_list>(<argument><expr><literal type="number">3.303e+23</literal></expr></argument>, <argument><expr><literal type="number">2.4397e6</literal></expr></argument>)</argument_list></decl>,
    <decl><name>VENUS</name>   <argument_list>(<argument><expr><literal type="number">4.869e+24</literal></expr></argument>, <argument><expr><literal type="number">6.0518e6</literal></expr></argument>)</argument_list></decl>,
    <decl><name>EARTH</name>   <argument_list>(<argument><expr><literal type="number">5.976e+24</literal></expr></argument>, <argument><expr><literal type="number">6.37814e6</literal></expr></argument>)</argument_list></decl>,
    <decl><name>MARS</name>    <argument_list>(<argument><expr><literal type="number">6.421e+23</literal></expr></argument>, <argument><expr><literal type="number">3.3972e6</literal></expr></argument>)</argument_list></decl>,
    <decl><name>JUPITER</name> <argument_list>(<argument><expr><literal type="number">1.9e+27</literal></expr></argument>,   <argument><expr><literal type="number">7.1492e7</literal></expr></argument>)</argument_list></decl>,
    <decl><name>SATURN</name>  <argument_list>(<argument><expr><literal type="number">5.688e+26</literal></expr></argument>, <argument><expr><literal type="number">6.0268e7</literal></expr></argument>)</argument_list></decl>,
    <decl><name>URANUS</name>  <argument_list>(<argument><expr><literal type="number">8.686e+25</literal></expr></argument>, <argument><expr><literal type="number">2.5559e7</literal></expr></argument>)</argument_list></decl>,
    <decl><name>NEPTUNE</name> <argument_list>(<argument><expr><literal type="number">1.024e+26</literal></expr></argument>, <argument><expr><literal type="number">2.4746e7</literal></expr></argument>)</argument_list></decl>;

    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>double</name></type> <name>mass</name></decl>;</decl_stmt>   <comment type="line">// in kilograms</comment>
    <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>double</name></type> <name>radius</name></decl>;</decl_stmt> <comment type="line">// in meters</comment>
    <constructor><name>Planet</name><parameter_list>(<parameter><decl><type><name>double</name></type> <name>mass</name></decl></parameter>, <parameter><decl><type><name>double</name></type> <name>radius</name></decl></parameter>)</parameter_list> <block>{
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>mass</name></name> <operator>=</operator> <name>mass</name></expr>;</expr_stmt>
        <expr_stmt><expr><name><name>this</name><operator>.</operator><name>radius</name></name> <operator>=</operator> <name>radius</name></expr>;</expr_stmt>
    }</block></constructor>

}</block></enum>
</unit>

<unit>
<enum><specifier>private</specifier> <specifier>static</specifier> enum <name>RelTypes</name> <super><implements>implements <name>RelationshipType</name></implements></super> <block>{}</block></enum>

<function><specifier>public</specifier> <specifier>static</specifier> <type><name>void</name></type> <name>main</name><parameter_list>(<parameter><decl><type><specifier>final</specifier> <name><name>String</name><index>[]</index></name></type> <name>args</name></decl></parameter>)</parameter_list> <block>{}</block></function></unit>

<unit>
<enum><specifier>public</specifier> enum <name>Policy</name> <block>{

  <decl><name>DISABLE</name><argument_list>(<argument><expr><name><name>Condition</name><operator>.</operator><name>FALSE</name></name></expr></argument>)</argument_list></decl>,
  <decl><name>NEVER</name><argument_list>(<argument><expr><name><name>Condition</name><operator>.</operator><name>FALSE</name></name></expr></argument>)</argument_list></decl>,
  <decl><name>DEFAULT</name><argument_list>(<argument><expr><name><name>Condition</name><operator>.</operator><name>DEFAULT</name></name></expr></argument>)</argument_list></decl>,
  <decl><name>ALWAYS</name><argument_list>(<argument><expr><name><name>Condition</name><operator>.</operator><name>TRUE</name></name></expr></argument>)</argument_list></decl>;

  <decl_stmt><decl><specifier>private</specifier> <type><specifier>final</specifier> <name>Condition</name></type> <name>condition</name></decl>;</decl_stmt>

  <constructor><specifier>private</specifier> <name>Policy</name><parameter_list>(<parameter><decl><type><name>Condition</name></type> <name>condition</name></decl></parameter>)</parameter_list> <block>{
    <expr_stmt><expr><name><name>this</name><operator>.</operator><name>condition</name></name> <operator>=</operator> <name>condition</name></expr>;</expr_stmt>
  }</block></constructor>

  <function><type><name>Condition</name></type> <name>getCondition</name><parameter_list>()</parameter_list> <block>{
    <return>return <expr><name>condition</name></expr>;</return>
  }</block></function>

}</block></enum>
</unit>

</unit>
