<?xml version="1.0" encoding="UTF-8"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:op="http://www.sdml.info/srcML/operator" language="C++" dir="operator" filename="operator_cpp">

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><op:operator>&gt;</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><op:operator>&gt;=</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><op:operator>&gt;&gt;</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><op:operator>&gt;&gt;=</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><op:operator>&gt;</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><op:operator>&gt;=</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><op:operator>&gt;&gt;</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><op:operator>&gt;&gt;=</op:operator><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>const_cast</name><argument_list>&lt;<argument><expr><name>type</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>static_cast</name><argument_list>&lt;<argument><expr><name>type</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>dynamic_cast</name><argument_list>&lt;<argument><expr><name>type</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><call><name><name>reinterpret_cast</name><argument_list>&lt;<argument><expr><name>type</name></expr></argument>&gt;</argument_list></name><argument_list>(<argument><expr><name>a</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><name>a</name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name><op:operator>::</op:operator><name>a</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><op:operator>delete</op:operator><index>[]</index><name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>+=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>+=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>+=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>*=</op:operator><op:operator>new</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>-=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>-=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>-=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>*=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>*=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>*=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>/=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>/=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>/=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>%=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>%=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>%=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&amp;=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&amp;=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&amp;=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>|=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>|=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>|=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>^=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>^=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>^=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&lt;&lt;=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&lt;&lt;=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&lt;&lt;=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><name><op:operator>::</op:operator><name>b</name></name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><op:operator>delete</op:operator> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<expr_stmt><expr><name>a</name> <op:operator>&gt;&gt;=</op:operator><op:operator>delete</op:operator><index>[]</index> <name>b</name></expr>;</expr_stmt>
</unit>

<unit>
<decl_stmt><decl><type><name><name><name>A</name><argument_list>&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><op:operator>::</op:operator><name>b</name></name></type> <name>c</name></decl>;</decl_stmt>
</unit>

<unit>
<decl_stmt><decl><type><name><name><name>A</name><argument_list>&lt;<argument><expr><name>T</name></expr></argument>&gt;</argument_list></name><op:operator>::</op:operator>*<name>b</name></name></type> <name>c</name></decl>;</decl_stmt>
</unit>

</unit>
 
