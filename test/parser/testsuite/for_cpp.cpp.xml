<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="C++" url="for" filename="for_cpp">

<unit language="C++">
<for>for<control>(<init><decl><type><name>int</name></type> <name>a</name> <range>: <expr><literal type="number">0</literal></expr></range></decl>, <decl><type ref="prev"/><name>b</name> <range>: <expr><literal type="number">0</literal></expr></range></decl>;</init> <condition><expr><literal type="number">1</literal></expr>;</condition> <incr/>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
</unit>

<unit language="C++">
<for>for<control>(<init><decl><type><name>int</name></type> <name>a</name> <range>: <expr><literal type="number">0</literal></expr></range></decl>, <decl><type ref="prev"/><name>b</name> <range>: <expr><literal type="number">0</literal></expr></range></decl>, <decl><type ref="prev"/><name>c</name> <range>: <expr><literal type="number">0</literal></expr></range></decl>;</init> <condition><expr><literal type="number">1</literal></expr>;</condition> <incr/>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
</unit>

<unit language="C++">
<for>for<control>(<init><decl><type><name>int</name></type> <name>a</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>, <decl><type ref="prev"/><name>b</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</init> <condition><expr><literal type="number">1</literal></expr>;</condition> <incr/>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
</unit>

<unit language="C++">
<for>for<control>(<init><decl><type><name>int</name></type> <name>a</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>, <decl><type ref="prev"/><name>b</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>, <decl><type ref="prev"/><name>c</name><argument_list>(<argument><expr><literal type="number">0</literal></expr></argument>)</argument_list></decl>;</init> <condition><expr><literal type="number">1</literal></expr>;</condition> <incr/>)</control><block type="pseudo"><block_content>
<empty_stmt>;</empty_stmt></block_content></block></for>
</unit>

<unit language="C++">
<for>for<control>(<init><expr><name>a</name> <range>: <expr><name>b</name></expr></range></expr></init>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name>c</name></expr>;</expr_stmt></block_content></block></for>
</unit>

<unit language="C++">
<for>for<control>(<init><expr><name>a</name> <operator>=</operator> <ternary><condition><expr><name>b</name></expr> ?</condition><then> <expr><name>c</name></expr> </then><else>: <expr><name>d</name></expr></else></ternary></expr>;</init> <condition><expr><literal type="number">1</literal></expr>;</condition> <incr/>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name>c</name></expr>;</expr_stmt></block_content></block></for>
</unit>

<unit language="C++">
<for>for<control>(<init><decl><type><name>int</name></type> <name>a</name> <init>= <expr><ternary><condition><expr><name>b</name></expr> ?</condition><then> <expr><name>c</name></expr> </then><else>: <expr><name>d</name></expr></else></ternary></expr></init></decl>;</init> <condition><expr><literal type="number">1</literal></expr>;</condition> <incr/>)</control><block type="pseudo"><block_content> <expr_stmt><expr><name>c</name></expr>;</expr_stmt></block_content></block></for>
</unit>

</unit>
