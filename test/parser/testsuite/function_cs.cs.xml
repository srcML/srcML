<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="C#" url="function" filename="function_cs">

<unit language="C#">
<function><type><specifier>public</specifier> <name>void</name></type> <name>M</name><parameter_list>(<parameter><decl><type><modifier>out</modifier> <name>int</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
</unit>

<unit language="C#">
<function><type><specifier>public</specifier> <specifier>static</specifier> <name>void</name></type> <name>M</name><parameter_list>(<parameter><decl><type><specifier>params</specifier> <name><name>int</name><index>[]</index></name></type> <name>list</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
</unit>

<unit language="C#">
<function><type><specifier>public</specifier> <name>void</name></type> <name>M</name><parameter_list>(<parameter><decl><type><modifier>ref</modifier> <name>int</name></type> <name>i</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
</unit>

<unit language="C#">
<function><type><specifier>static</specifier> <specifier>inline</specifier> <name>int</name></type> <name>f</name><parameter_list>()</parameter_list> <block>{<block_content/>}</block></function>
</unit>

<unit language="C#">
<function><type><name>int</name></type> <name>main</name><parameter_list>(<parameter><decl><type><name>int</name></type> <name>argc</name></decl></parameter>, <parameter><decl><type><name><name>int</name><modifier>*</modifier><index>[]</index></name></type> <name>argv</name></decl></parameter>)</parameter_list>
<block>{<block_content/>}</block></function>
</unit>

<unit language="C#">
<function><type><name><name>class</name> <name>foo</name></name></type> <name>bar</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content>}</block></function>
</unit>

<unit language="C#">
<function><type><name><name>struct</name> <name>foo</name></name></type> <name>bar</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content>}</block></function>
</unit>

<unit language="C#">
<function><type><name><name>enum</name> <name>foo</name></name></type> <name>bar</name><parameter_list>()</parameter_list> <block>{<block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content>}</block></function>
</unit>

<unit language="C#">
<function><type><specifier>static</specifier> <name>int</name></type> <name>WordCount</name><parameter_list>(<parameter><decl><type><specifier>this</specifier> <name>String</name></type> <name>str</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
</unit>

<unit language="C#">
<function><type><specifier>static</specifier> <name>int</name></type> <name>WordCount</name><parameter_list>(<parameter><decl><type><name>String</name></type> <name>this</name></decl></parameter>)</parameter_list> <block>{<block_content/>}</block></function>
</unit>

</unit>
