<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" language="C++" url="if">

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>b</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition><block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><literal type="number">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name> <operator>==</operator> <name>b</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>c</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name> <operator>==</operator> <name>b</name></expr>)</condition><block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name> <operator>==</operator> <name>d</name></expr>)</condition> <block>{<block_content> <expr_stmt><expr><name>b</name> <operator>=</operator> <name>c</name></expr>;</expr_stmt> </block_content>}</block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition><block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></if>
<else>else<block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></else></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition><block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></if>
<else>else <block>{<block_content/>}</block></else></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>a</name></expr>)</condition> <block>{<block_content/>}</block></if>
<else>else<block type="pseudo"><block_content> <empty_stmt>;</empty_stmt></block_content></block></else></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>c</name></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>a</name></expr><operator>,</operator> <expr><name>b</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><call><name>a</name><argument_list>(<argument><expr><name>b</name></expr></argument>)</argument_list></call> <operator>&lt;</operator> <name>t</name></expr>)</condition><block type="pseudo"><block_content>
     <empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><operator>(</operator><call><name>a</name><argument_list>(<argument><expr><name>b</name></expr></argument>, <argument><expr><name>c</name></expr></argument>)</argument_list></call><operator>)</operator></expr>)</condition> <block>{<block_content>
</block_content>}</block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name><name>upper</name><operator>.</operator><name>x</name></name> <operator>&lt;</operator> <call><name>qMin</name><argument_list>(<argument><expr><name><name>l</name><operator>.</operator><name>x</name></name></expr></argument>, <argument><expr><name><name>u</name><operator>.</operator><name>x</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo"><block_content> <return>return <expr><literal type="number">0</literal></expr>;</return></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
  <while>while <condition>(<expr><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
    <empty_stmt>;</empty_stmt></block_content></block></while></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
  <if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if>
  <if type="elseif">else
    if <condition>(<expr><literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content> 
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>
</unit>

<unit language="C++">
  <if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">1</literal></expr>;</expr_stmt></block_content></block></if>
  <if type="elseif">else
    if <condition>(<expr><literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content> 
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">3</literal></expr>;</expr_stmt></block_content></block></if>
    <else>else<block type="pseudo"><block_content>
      <expr_stmt><expr><name>x</name> <operator>=</operator> <literal type="number">4</literal></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
  <if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
  <break>break;</break></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <break>break;</break></block_content></block></else></if_stmt></block_content></block></if>
    <if type="elseif">else
      if <condition>(<expr><literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>
  <break>break;</break></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <break>break;</break></block_content></block></else></if_stmt></block_content></block></if>
  <if type="elseif">else
    if <condition>(<expr><literal type="number">5</literal></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><literal type="number">6</literal></expr>)</condition><block type="pseudo"><block_content>
  <break>break;</break></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <break>break;</break></block_content></block></else></if_stmt></block_content></block></if>
    <if type="elseif">else
      if <condition>(<expr><literal type="number">7</literal></expr>)</condition><block type="pseudo"><block_content>
  <break>break;</break></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <break>break;</break></block_content></block></else></if_stmt>
</unit>

<unit language="C++">
  <if_stmt><if>if <condition>(<expr><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content>
    <if_stmt><if>if <condition>(<expr><literal type="number">2</literal></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><literal type="number">3</literal></expr>)</condition><block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></else></if_stmt></block_content></block></if>
    <if type="elseif">else
      if <condition>(<expr><literal type="number">4</literal></expr>)</condition><block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></else></if_stmt></block_content></block></if>
  <if type="elseif">else
    if <condition>(<expr><literal type="number">5</literal></expr>)</condition><block type="pseudo"><block_content>
      <if_stmt><if>if <condition>(<expr><literal type="number">6</literal></expr>)</condition><block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></else></if_stmt></block_content></block></if>
    <if type="elseif">else
      if <condition>(<expr><literal type="number">7</literal></expr>)</condition><block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></if>
      <else>else<block type="pseudo"><block_content>
  <continue>continue;</continue></block_content></block></else></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if<condition>(<decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>)</condition><block type="pseudo"><block_content><empty_stmt>;</empty_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if<condition>(<decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>a</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if<condition>(<decl><type><name>int</name></type> <name>a</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>)</condition> <block>{<block_content/>}</block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if<condition>(<expr><name>a</name><operator>&amp;</operator><literal type="number">1</literal></expr>)</condition><block type="pseudo"><block_content> <expr_stmt><expr><name>b</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
</unit>

<unit language="C++">
<if_stmt><if>if <condition>(<expr><name>emit</name></expr>)</condition> <block>{<block_content/>}</block></if></if_stmt>
</unit>

</unit>
